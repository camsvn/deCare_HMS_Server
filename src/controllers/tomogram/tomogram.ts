import { Request, Response } from "express";
import jwt from 'jsonwebtoken';

import Locals from '../../providers/Locals'
import Log from '../../middlewares/Log';
import {errorResponse,failResponse,successResponse} from '../../helpers/JSend'

import fs from 'fs';
import {userDB, mainDB, connections} from '../../providers/Database'

export const uploadTomogramController = async (req: Request, res: Response) => {
  // console.log('FileName', req.files);//this will be automatically set by multer
  // console.log('Body', req.body);

  const { opid, narrations } = req.body;
  //below code will read the data from the upload folder. Multer will automatically upload the file in that folder with an autogenerated name
  let descriptions: [];
  try {
    descriptions = JSON.parse(narrations);
    if(!Array.isArray(descriptions))
        throw new Error('Not an Array')
  } catch (err) {
    descriptions = []
  }
  const files = req.files as Express.Multer.File[];

  connections.get('main')?.transaction().then(t => {
    mainDB.TomogramMasters.create({opid, doctorId: 1, tomogramTypeId: 6, narration: ''},
    {transaction: t})
    .then(result => {
      let promises = [];
      for(let i = 0 ; i < files.length ; i++) {
        let narration = descriptions[i] ? descriptions[i] : '';
        let newPromise = mainDB.TomogramDetails.create({ masterid: result.id, tomogrampartid: 4, narration },
        {transaction: t});
        promises.push(newPromise);
      }
      return Promise.all(promises);
    })
    .then(data => {
      files.forEach((file, index) => {
        let savedData = data[index];
        let newFileName = `TOMOGRAM${savedData.masterid}_${savedData.id}.jpg`
        fs.renameSync(file.path, file.destination + newFileName)        
      })
      t.commit();
      res.send(data);
    })
    .catch(err => {
      t.rollback();
      console.log(err.message)
      res.status(500).send(errorResponse(err.message))
    })  
  })
}